import { Component, Input, ViewChild } from '@angular/core';
import { TileComponent } from "../tile/tile.component";
import * as i0 from "@angular/core";
import * as i1 from "../services/game-manager.service";
import * as i2 from "../tile/tile.component";
import * as i3 from "@angular/common";
export class BoardComponent {
    constructor(_manager, _elRef) {
        this._manager = _manager;
        this._elRef = _elRef;
    }
    ngAfterViewInit() {
        if (this._manager.settings.tileSize) {
            const bb = this.tile.el.nativeElement.getBoundingClientRect();
            const TILE_MARGIN = 1; //px
            const oneTileSpace = bb.width + 2 * TILE_MARGIN;
            const boardWidth = oneTileSpace * this._manager.elementsInRow;
            this._elRef.nativeElement.style['width'] = boardWidth + 'px';
        }
    }
}
BoardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: BoardComponent, deps: [{ token: i1.GameManagerService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BoardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.2", type: BoardComponent, selector: "board", inputs: { grid: "grid" }, viewQueries: [{ propertyName: "tile", first: true, predicate: TileComponent, descendants: true }], ngImport: i0, template: "<tile *ngFor=\"let tileData of grid\"\n    [data]=\"tileData\">\n</tile>\n", styles: [":host{width:290px;display:block}\n"], components: [{ type: i2.TileComponent, selector: "tile", inputs: ["data"] }], directives: [{ type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: BoardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'board', template: "<tile *ngFor=\"let tileData of grid\"\n    [data]=\"tileData\">\n</tile>\n", styles: [":host{width:290px;display:block}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.GameManagerService }, { type: i0.ElementRef }]; }, propDecorators: { grid: [{
                type: Input
            }], tile: [{
                type: ViewChild,
                args: [TileComponent]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXRldHJpcy9zcmMvbGliL2JvYXJkL2JvYXJkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC10ZXRyaXMvc3JjL2xpYi9ib2FyZC9ib2FyZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFjLEtBQUssRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFdEUsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHdCQUF3QixDQUFDOzs7OztBQU9yRCxNQUFNLE9BQU8sY0FBYztJQUt2QixZQUNVLFFBQTRCLEVBQzVCLE1BQWtCO1FBRGxCLGFBQVEsR0FBUixRQUFRLENBQW9CO1FBQzVCLFdBQU0sR0FBTixNQUFNLENBQVk7SUFHNUIsQ0FBQztJQUVELGVBQWU7UUFDWCxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRTtZQUNqQyxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQztZQUM5RCxNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJO1lBQzNCLE1BQU0sWUFBWSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLFdBQVcsQ0FBQztZQUNoRCxNQUFNLFVBQVUsR0FBRyxZQUFZLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUM7WUFFOUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLFVBQVUsR0FBRyxJQUFJLENBQUM7U0FDaEU7SUFDTCxDQUFDOzsyR0FyQlEsY0FBYzsrRkFBZCxjQUFjLDZHQUVaLGFBQWEsZ0RDWDVCLDRFQUdBOzJGRE1hLGNBQWM7a0JBTDFCLFNBQVM7K0JBQ0ksT0FBTztrSUFLUixJQUFJO3NCQUFaLEtBQUs7Z0JBQ29CLElBQUk7c0JBQTdCLFNBQVM7dUJBQUMsYUFBYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7R2FtZU1hbmFnZXJTZXJ2aWNlLCBUaWxlfSBmcm9tICcuLi9zZXJ2aWNlcy9nYW1lLW1hbmFnZXIuc2VydmljZSc7XG5pbXBvcnQge1RpbGVDb21wb25lbnR9IGZyb20gXCIuLi90aWxlL3RpbGUuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYm9hcmQnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ib2FyZC5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vYm9hcmQuY29tcG9uZW50LmNzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBCb2FyZENvbXBvbmVudCB7XG4gICAgQElucHV0KCkgZ3JpZDogQXJyYXk8VGlsZT47XG4gICAgQFZpZXdDaGlsZChUaWxlQ29tcG9uZW50KSB0aWxlOiBUaWxlQ29tcG9uZW50O1xuICAgIHB1YmxpYyBib2FyZFdpZHRoOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgIHByaXZhdGUgX21hbmFnZXI6IEdhbWVNYW5hZ2VyU2VydmljZSxcbiAgICAgIHByaXZhdGUgX2VsUmVmOiBFbGVtZW50UmVmXG4gICAgKSB7XG5cbiAgICB9XG5cbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgICAgIGlmICh0aGlzLl9tYW5hZ2VyLnNldHRpbmdzLnRpbGVTaXplKSB7XG4gICAgICAgICAgICBjb25zdCBiYiA9IHRoaXMudGlsZS5lbC5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgY29uc3QgVElMRV9NQVJHSU4gPSAxOyAvL3B4XG4gICAgICAgICAgICBjb25zdCBvbmVUaWxlU3BhY2UgPSBiYi53aWR0aCArIDIgKiBUSUxFX01BUkdJTjtcbiAgICAgICAgICAgIGNvbnN0IGJvYXJkV2lkdGggPSBvbmVUaWxlU3BhY2UgKiB0aGlzLl9tYW5hZ2VyLmVsZW1lbnRzSW5Sb3c7XG5cbiAgICAgICAgICAgIHRoaXMuX2VsUmVmLm5hdGl2ZUVsZW1lbnQuc3R5bGVbJ3dpZHRoJ10gPSBib2FyZFdpZHRoICsgJ3B4JztcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsIjx0aWxlICpuZ0Zvcj1cImxldCB0aWxlRGF0YSBvZiBncmlkXCJcbiAgICBbZGF0YV09XCJ0aWxlRGF0YVwiPlxuPC90aWxlPlxuIl19