import { Observable } from 'rxjs/internal/Observable';
import * as i0 from "@angular/core";
export declare class Tile {
    solid: boolean;
    color: null;
}
export declare class GameManagerService {
    settings: {
        tileSize: null;
    };
    get elementsInRow(): number;
    grid: Array<Tile>;
    lineCleared$: Observable<any>;
    gameOver$: Observable<any>;
    private _gridSize;
    private _piece;
    private _piecesFactory;
    private _locked;
    private _gameSpeed;
    private _gameInterval;
    private _lineCleared;
    private _gameOver;
    private _keepMovingDown;
    constructor();
    initialize(width: number, height: number, gameSpeed: number, tileSize?: any): void;
    start(): void;
    stop(): void;
    reset(): void;
    moveLeft(): void;
    moveRight(): void;
    drop(): void;
    rotate(): void;
    moveDown(): void;
    private _clearFullLines;
    private _update;
    private _isGameOver;
    private _onGameOver;
    private _spawnNewPiece;
    private _initializeEmptyBoard;
    private _clearPiece;
    private _drawPiece;
    private _markSolid;
    private __changeCell;
    private _collidesBottom;
    private _collidesLeft;
    private _collidesRight;
    private __collides;
    static ɵfac: i0.ɵɵFactoryDeclaration<GameManagerService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<GameManagerService>;
}
