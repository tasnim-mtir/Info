{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nlet BlogingComponent = class BlogingComponent {\n  //data:any={Title:\"\",Price:\"\",Quantity:\"\",Description:\"\",Email:\"\",Password:\"\"}\n  constructor(user, router, formBuilder) {\n    this.user = user;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.helper = new JwtHelperService();\n    this.data3 = {\n      encrypted_id: \"\",\n      userName: \"\"\n    };\n    const token = localStorage.getItem('token');\n    if (token && !this.helper.isTokenExpired(token)) {\n      const decodedToken = this.helper.decodeToken(token);\n      this.encrypted_id = decodedToken.userId;\n    }\n  }\n  myCustomValidator(control) {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : {\n      'invalidEmail': true\n    };\n  }\n  ngOnInit() {\n    this.user.getOneUser(this.encrypted_id).subscribe({\n      next: response => {\n        this.data3 = response.user;\n      }\n    });\n    throw new Error('Method not implemented.'), this.myForm = this.formBuilder.group({\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^(20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|90|91|92|93|94|95|96|97|98|99)\\d{6}$/)]],\n      email: ['', [Validators.email, this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      priceSeance: [''],\n      priceExamen: [''],\n      candidatId: [''],\n      etablissment: ['', Validators.required]\n    });\n  }\n  addCandidat(f) {\n    let data = f.value;\n    data.phoneNumber = '+216' + data.phoneNumber;\n    data.UserId = this.id;\n    this.Mservice.addMoniteur(data, this.encrypted_id).subscribe({\n      next: () => {\n        this.router.navigate(['/moniteurs']);\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n};\nBlogingComponent = __decorate([Component({\n  selector: 'app-bloging',\n  templateUrl: './bloging.component.html',\n  styleUrls: ['./bloging.component.css']\n})], BlogingComponent);\nexport { BlogingComponent };","map":{"version":3,"mappings":"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","names":["Component","JwtHelperService","BlogingComponent","constructor","user","router","formBuilder","encrypted_id","userName","token","localStorage","getItem","helper","isTokenExpired","decodedToken","decodeToken","userId","myCustomValidator","control","EMAIL_REGEXP","isValid","test","value","ngOnInit","getOneUser","subscribe","next","response","data3","Error","myForm","group","phoneNumber","Validators","required","pattern","email","firstName","lastName","password","minLength","priceSeance","priceExamen","candidatId","etablissment","addCandidat","f","data","UserId","id","Mservice","addMoniteur","navigate","error","err","console","log","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\bloging\\bloging\\bloging.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Component({\n  selector: 'app-bloging',\n  templateUrl: './bloging.component.html',\n  styleUrls: ['./bloging.component.css']\n})\nexport class BlogingComponent {\n  helper = new JwtHelperService()\n  id: any\n  UserId: any\n  myForm: any;\n  data1: any\n  encrypted_id: any \n  data3= { encrypted_id: \"\" ,userName: \"\" ,}\n\n  //data:any={Title:\"\",Price:\"\",Quantity:\"\",Description:\"\",Email:\"\",Password:\"\"}\n\n  constructor(\n    private user: serv,\n    private router: Router,\n    private formBuilder: FormBuilder) {\n      const token = localStorage.getItem('token');\n    if (token && !this.helper.isTokenExpired(token)) {\n      const decodedToken = this.helper.decodeToken(token);\n       this.encrypted_id = decodedToken.userId;}\n      }\n\n  myCustomValidator(control: FormControl): { [key: string]: boolean } | null {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : { 'invalidEmail': true };\n  }\n\n  ngOnInit(): void {\n        this.user.getOneUser(this.encrypted_id).subscribe({\n          next: (response: any) => {\n            this.data3 = response.user\n          }\n        })\n    throw new Error('Method not implemented.'),\n    this.myForm = this.formBuilder.group({\n      phoneNumber: ['', [Validators.required, Validators.pattern(/^(20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|90|91|92|93|94|95|96|97|98|99)\\d{6}$/)]],\n      email: ['', [ Validators.email, this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [ Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      priceSeance: [''],\n      priceExamen: [''],\n      candidatId: [''],\n      etablissment: ['', Validators.required],\n\n    });\n\n \n  }\n\n  addCandidat(f: any) {\n    let data = f.value\n    data.phoneNumber = '+216' + data.phoneNumber;\n    data.UserId = this.id\n    this.Mservice.addMoniteur(data,this.encrypted_id).subscribe({\n      next: () => {\n        this.router.navigate(['/moniteurs'])\n      },\n      error: (err: HttpErrorResponse) => {\n        console.log(err)\n      }\n    })\n  }\n\n}\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}