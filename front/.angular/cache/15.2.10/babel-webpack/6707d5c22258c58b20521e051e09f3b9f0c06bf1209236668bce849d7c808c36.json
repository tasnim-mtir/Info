{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/game-manager.service\";\nexport class TileComponent {\n  constructor(el, _renderer, _manager) {\n    this.el = el;\n    this._renderer = _renderer;\n    this._manager = _manager;\n    this.tileSize = null;\n    if (this._manager.settings.tileSize) {\n      this.tileSize = this._manager.settings.tileSize;\n    }\n  }\n  ngOnInit() {\n    if (this.data.color) {\n      this._renderer.addClass(this.el.nativeElement, this.data.color);\n    }\n  }\n  static #_ = this.ɵfac = function TileComponent_Factory(t) {\n    return new (t || TileComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.GameManagerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TileComponent,\n    selectors: [[\"tile\"]],\n    hostVars: 4,\n    hostBindings: function TileComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.tileSize)(\"height\", ctx.tileSize);\n      }\n    },\n    inputs: {\n      data: \"data\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function TileComponent_Template(rf, ctx) {},\n    styles: [\"tile {\\n  display: block;\\n  background: rgba(76, 118, 126, 0.35);\\n  width: 25px;\\n  height: 25px;\\n  float: left;\\n  border: 1px solid #0b0b0b;\\n  margin: 1px;\\n}\\ntile.color-box {\\n  background: #E86A33;\\n}\\ntile.color-dot {\\n  background: #47A992;\\n}\\ntile.color-line {\\n  background: #557A46;\\n}\\ntile.color-t {\\n  background: #8C3333;\\n}\\ntile.color-l {\\n  background: #3D5656;\\n}\\ntile.color-lr {\\n  background: #016A70;\\n}\\ntile.color-z {\\n  background: #D2DE32;\\n}\\ntile.color-s {\\n  background: #BA704F;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL25neC10ZXRyaXMvc3JjL2xpYi90aWxlL3RpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0Esb0NBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7QUFDSjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTjtBQUNJO0VBQ0UsbUJBQUE7QUFDTiIsInNvdXJjZXNDb250ZW50IjpbInRpbGUge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDc2LCAxMTgsIDEyNiwgMC4zNSk7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzBiMGIwYjtcclxuICAgIG1hcmdpbjogMXB4O1xyXG5cclxuICAgICYuY29sb3ItYm94IHtcclxuICAgICAgYmFja2dyb3VuZDogI0U4NkEzMztcclxuICAgIH1cclxuICAgICYuY29sb3ItZG90IHtcclxuICAgICAgYmFja2dyb3VuZDogIzQ3QTk5MjtcclxuICAgIH1cclxuICAgICYuY29sb3ItbGluZSB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICM1NTdBNDY7XHJcbiAgICB9XHJcbiAgICAmLmNvbG9yLXQge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjOEMzMzMzO1xyXG4gICAgfVxyXG4gICAgJi5jb2xvci1sIHtcclxuICAgICAgYmFja2dyb3VuZDogIzNENTY1NjtcclxuICAgIH1cclxuICAgICYuY29sb3ItbHIge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjMDE2QTcwO1xyXG4gICAgfVxyXG4gICAgJi5jb2xvci16IHtcclxuICAgICAgYmFja2dyb3VuZDogI0QyREUzMjtcclxuICAgIH1cclxuICAgICYuY29sb3ItcyB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICNCQTcwNEY7XHJcbiAgICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}","map":{"version":3,"mappings":";;AAuBA,OAAM,MAAOA,aAAa;EAItBC,YACWC,EAAc,EACbC,SAAoB,EACpBC,QAA4B;IAF7B,OAAE,GAAFF,EAAE;IACD,cAAS,GAATC,SAAS;IACT,aAAQ,GAARC,QAAQ;IALb,aAAQ,GAAG,IAAI;IAOlB,IAAI,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAACC,QAAQ,EAAE;MACjC,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAACC,QAAQ,CAACC,QAAQ;;EAGvD;EAEAC,QAAQ;IACJ,IAAI,IAAI,CAACC,IAAI,CAACC,KAAK,EAAE;MACjB,IAAI,CAACN,SAAS,CAACO,QAAQ,CAAC,IAAI,CAACR,EAAE,CAACS,aAAa,EAAE,IAAI,CAACH,IAAI,CAACC,KAAK,CAAC;;EAGvE;EAAC;qBApBQT,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAY;IAAAC;IAAAC;MAAA","names":["TileComponent","constructor","el","_renderer","_manager","settings","tileSize","ngOnInit","data","color","addClass","nativeElement","selectors","hostVars","hostBindings"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\ngx-tetris\\src\\lib\\tile\\tile.component.ts"],"sourcesContent":["import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    OnInit,\r\n    Renderer2,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\nimport {GameManagerService, Tile} from '../services/game-manager.service';\r\n\r\n@Component({\r\n    selector: 'tile',\r\n    templateUrl: './tile.component.html',\r\n    styleUrls: ['./tile.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    // tslint:disable-next-line\r\n    host: {\r\n        '[style.width]': 'tileSize',\r\n        '[style.height]': 'tileSize'\r\n    }\r\n})\r\nexport class TileComponent implements OnInit {\r\n    @Input() data!: Tile;\r\n    public tileSize = null;\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        private _renderer: Renderer2,\r\n        private _manager: GameManagerService\r\n    ) {\r\n        if (this._manager.settings.tileSize) {\r\n            this.tileSize = this._manager.settings.tileSize\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.data.color) {\r\n            this._renderer.addClass(this.el.nativeElement, this.data.color);\r\n        }\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}