{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/views/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction SingupComponent_div_43_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre \\u00E9tablissement!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_43_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.myForm.get(\"userName\").errors.required);\n  }\n}\nfunction SingupComponent_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 44);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r11);\n  }\n}\nfunction SingupComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre gouvernorat!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_50_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.myForm.get(\"gov\").errors.required);\n  }\n}\nfunction SingupComponent_div_55_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre Nom!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_55_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.myForm.get(\"lastName\").errors.required);\n  }\n}\nfunction SingupComponent_div_59_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre Nom!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_59_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.myForm.get(\"firstName\").errors.required);\n  }\n}\nfunction SingupComponent_div_62_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre email!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_62_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Format invalide.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_62_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵtemplate(2, SingupComponent_div_62_div_2_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.myForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.myForm.get(\"email\").errors.email);\n  }\n}\nfunction SingupComponent_div_66_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Entrez votre mot de passe\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_66_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Le mot de passe doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_66_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵtemplate(2, SingupComponent_div_66_div_2_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.myForm.controls.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.myForm.controls.password.errors.minlength);\n  }\n}\nfunction SingupComponent_div_69_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵtext(1, \"Les mots de passe ne correspondent pas\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_69_div_1_Template, 2, 0, \"div\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.myForm.controls.passwordVerification.value !== ctx_r8.myForm.controls.password.value);\n  }\n}\nfunction SingupComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵelement(1, \"i\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.msg, \"\");\n  }\n}\nexport class SingupComponent {\n  constructor(Service, router, formBuilder) {\n    this.Service = Service;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  myCustomValidator(control) {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : {\n      'invalidEmail': true\n    };\n  }\n  register(f) {\n    let data = f.value;\n    this.Service.register(data).subscribe(data => {\n      if (data) {\n        this.router.navigate(['/login']).then(() => {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        });\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      passwordVerification: ['', Validators.required]\n    }, {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n      // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey, confirmPasswordKey) {\n    return group => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({\n          emptyPasswords: true\n        });\n      }\n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({\n          mismatchedPasswords: true\n        });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n  static #_ = this.ɵfac = function SingupComponent_Factory(t) {\n    return new (t || SingupComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingupComponent,\n    selectors: [[\"app-singup\"]],\n    decls: 78,\n    vars: 12,\n    consts: [[\"id\", \"header\", 1, \"fixed-top\", \"navbar-dark\", 2, \"background-color\", \"#01080c6a\"], [1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-lg-between\"], [2, \"width\", \"150px\"], [\"href\", \"http://localhost:4200/\"], [\"src\", \"/assets/img/1.png \"], [\"id\", \"navbar\", 1, \"navbar\", \"order-last\", \"order-lg-0\"], [\"href\", \"#hero\", 1, \"nav-link\", \"scrollto\", \"active\"], [\"href\", \"#about\", 1, \"nav-link\", \"scrollto\"], [\"href\", \"#services\", 1, \"nav-link\", \"scrollto\"], [\"href\", \"#contact\", 1, \"nav-link\", \"scrollto\"], [\"href\", \"#pricing\", 1, \"nav-link\", \"scrollto\"], [\"href\", \"http://localhost:4200/login\", 1, \"nav-link\", \"scrollto\"], [1, \"bi\", \"bi-list\", \"mobile-nav-toggle\"], [\"href\", \"http://localhost:4200/signup\", 1, \"get-started-btn\", \"scrollto\", \"scrollto\"], [1, \"bg-image\", 2, \"height\", \"400px\"], [\"src\", \"assets/img/5551.jpg\"], [1, \"text-center\", \"container\", \"my-5\"], [1, \"card\", \"mx-6\", \"mx-md-5\", \"shadow-5-strong\", 2, \"margin-top\", \"-100px\", \"background\", \"hsla(0, 16%, 30%, 0.8)\", \"backdrop-filter\", \"blur(5px)\"], [1, \"card-body\", \"py-5\", \"px-md-5\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-lg-8\"], [1, \"fw-bold\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-md-6\", \"mb-4\"], [1, \"form-outline\"], [\"type\", \"text\", \"name\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"Etablissement\", 1, \"form-control\"], [4, \"ngIf\"], [\"name\", \"gov\", \"formControlName\", \"gov\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"selected\", \"\", \"hidden\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"lastName\", \"placeholder\", \"Nom\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"firstName\", \"placeholder\", \"Pr\\u00E9nom\", 1, \"form-control\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Mot de passe\", 1, \"form-control\"], [\"type\", \"password\", \"name\", \"passwordVerification\", \"formControlName\", \"passwordVerification\", \"placeholder\", \"Confirmer le mot de passe\", 1, \"form-control\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"button-85\", \"btn\", \"btn-btn\", \"btn-outline-warning\", \"mb-4\", 3, \"disabled\"], [1, \"text-center\"], [\"href\", \"http://localhost:4200/login\", 2, \"color\", \"#aaa5a5\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"], [3, \"value\"], [1, \"bi\", \"bi-exclamation-circle\"]],\n    template: function SingupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r20 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"header\", 0)(1, \"div\", 1)(2, \"h1\", 2)(3, \"a\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"nav\", 5)(6, \"ul\")(7, \"li\")(8, \"a\", 6);\n        i0.ɵɵtext(9, \"Home\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"li\")(11, \"a\", 7);\n        i0.ɵɵtext(12, \"About\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"li\")(14, \"a\", 8);\n        i0.ɵɵtext(15, \"Services\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"li\")(17, \"a\", 9);\n        i0.ɵɵtext(18, \"contact\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"li\")(20, \"a\", 10);\n        i0.ɵɵtext(21, \"paiement\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"li\")(23, \"a\", 11);\n        i0.ɵɵtext(24, \"Connexion\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(25, \"i\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"a\", 13);\n        i0.ɵɵtext(27, \"Rejoignez-nous\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"div\", 14);\n        i0.ɵɵelement(29, \"img\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"section\", 16)(31, \"div\", 17)(32, \"div\", 18)(33, \"div\", 19)(34, \"div\", 20)(35, \"h2\", 21);\n        i0.ɵɵtext(36, \"Inscription\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"form\", 22, 23);\n        i0.ɵɵlistener(\"ngSubmit\", function SingupComponent_Template_form_ngSubmit_37_listener() {\n          i0.ɵɵrestoreView(_r20);\n          const _r0 = i0.ɵɵreference(38);\n          return i0.ɵɵresetView(ctx.register(_r0));\n        });\n        i0.ɵɵelementStart(39, \"div\", 24)(40, \"div\", 25)(41, \"div\", 26);\n        i0.ɵɵelement(42, \"input\", 27);\n        i0.ɵɵtemplate(43, SingupComponent_div_43_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(44, \"div\", 25)(45, \"div\", 26)(46, \"select\", 29);\n        i0.ɵɵlistener(\"ngModelChange\", function SingupComponent_Template_select_ngModelChange_46_listener($event) {\n          return ctx.selectedItem = $event;\n        });\n        i0.ɵɵelementStart(47, \"option\", 30);\n        i0.ɵɵtext(48, \" Gouvernorat \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, SingupComponent_option_49_Template, 2, 2, \"option\", 31);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(50, SingupComponent_div_50_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"div\", 24)(52, \"div\", 25)(53, \"div\", 26);\n        i0.ɵɵelement(54, \"input\", 32);\n        i0.ɵɵtemplate(55, SingupComponent_div_55_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(56, \"div\", 25)(57, \"div\", 26);\n        i0.ɵɵelement(58, \"input\", 33);\n        i0.ɵɵtemplate(59, SingupComponent_div_59_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(60, \"div\", 34);\n        i0.ɵɵelement(61, \"input\", 35);\n        i0.ɵɵtemplate(62, SingupComponent_div_62_Template, 3, 2, \"div\", 28);\n        i0.ɵɵelement(63, \"br\");\n        i0.ɵɵelementStart(64, \"div\", 34);\n        i0.ɵɵelement(65, \"input\", 36);\n        i0.ɵɵtemplate(66, SingupComponent_div_66_Template, 3, 2, \"div\", 28);\n        i0.ɵɵelement(67, \"br\")(68, \"input\", 37);\n        i0.ɵɵtemplate(69, SingupComponent_div_69_Template, 2, 1, \"div\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(70, SingupComponent_div_70_Template, 3, 1, \"div\", 38);\n        i0.ɵɵelementStart(71, \"button\", 39);\n        i0.ɵɵtext(72, \" S'inscrire \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"div\", 40)(74, \"p\");\n        i0.ɵɵtext(75, \"vous avez d\\u00E9ja un compte??\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(76, \"a\", 41);\n        i0.ɵɵtext(77, \" connecter \");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(38);\n        i0.ɵɵadvance(37);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"userName\").invalid && (ctx.myForm.get(\"userName\").dirty || ctx.myForm.get(\"userName\").touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedItem);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.list);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"gov\").invalid && (ctx.myForm.get(\"gov\").dirty || ctx.myForm.get(\"gov\").touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"lastName\").invalid && (ctx.myForm.get(\"lastName\").dirty || ctx.myForm.get(\"lastName\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"firstName\").invalid && (ctx.myForm.get(\"firstName\").dirty || ctx.myForm.get(\"firstName\").touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"email\").invalid && (ctx.myForm.get(\"email\").dirty || ctx.myForm.get(\"email\").touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls.password.errors && (ctx.myForm.controls.password.dirty || ctx.myForm.controls.password.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls.passwordVerification.errors && (ctx.myForm.controls.passwordVerification.dirty || ctx.myForm.controls.passwordVerification.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.msg);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","SingupComponent","constructor","Service","router","formBuilder","myCustomValidator","control","EMAIL_REGEXP","isValid","test","value","register","f","data","subscribe","navigate","then","fire","position","icon","title","showConfirmButton","timer","console","log","err","msg","error","ngOnInit","myForm","group","email","required","firstName","lastName","password","minLength","pattern","passwordVerification","validator","matchingPasswords","passwordKey","confirmPasswordKey","controls","confirmPassword","setErrors","emptyPasswords","mismatchedPasswords","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.ts","C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/views/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-singup',\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.css']\n})\nexport class SingupComponent implements OnInit {\n  myForm: any;\n  msg:any\n  f: any;\nconstructor( private Service:UserService,private router:Router ,private formBuilder: FormBuilder){}\n  \n\nmyCustomValidator(control: FormControl): { [key: string]: boolean } | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if the email is valid using the regular expression\n  const isValid = EMAIL_REGEXP.test(control.value);\n\n  // Return an object with the error code and message if the email is invalid\n  return isValid ? null : { 'invalidEmail': true };}\n\n\n  register(f:any){\n    let data=f.value\n    this.Service.register(data).subscribe(data=>{\n      if(data){\n        this.router.navigate(['/login']).then(()=>{\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          })\n        })\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit(): void { \n    this.myForm = this.formBuilder.group({\n\n      email: ['', [Validators.required, Validators.email,this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],   \n      passwordVerification: ['', Validators.required]},\n       \n      {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n        // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup) => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n  \n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({ emptyPasswords: true });\n      }\n  \n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({ mismatchedPasswords: true });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n\n\n}\n\n\n\n\n\n\n","<!--Navbar-->\n<header id=\"header\" class=\"fixed-top navbar-dark\" style=\"background-color: #01080c6a;\" >\n  <div class=\"container d-flex align-items-center justify-content-lg-between\">\n\n    <h1 style=\"width: 150px ; \"><a href=\"http://localhost:4200/\"> <img src=\"/assets/img/1.png \" > </a></h1>\n    <!-- Uncomment below if you prefer to use an image logo -->\n    <!-- <a href=\"index.html\" class=\"logo me-auto me-lg-0\"><img src=\"assets/img/logo.png\" alt=\"\" class=\"img-fluid\"></a>-->\n\n    <nav id=\"navbar\" class=\"navbar order-last order-lg-0\">\n      <ul>\n        <li><a class=\"nav-link scrollto active\" href=\"#hero\">Home</a></li>\n        <li><a class=\"nav-link scrollto\" href=\"#about\">About</a></li>\n        <li><a class=\"nav-link scrollto\" href=\"#services\">Services</a></li>\n        <li><a class=\"nav-link scrollto \" href=\"#contact\">contact</a></li>\n        <li><a class=\"nav-link scrollto\" href=\"#pricing\">paiement</a></li>\n        <li><a class=\"nav-link scrollto\" href=\"http://localhost:4200/login\">Connexion</a></li>\n\n\n\n\n      </ul>\n      <i class=\"bi bi-list mobile-nav-toggle\"></i>\n    </nav><!-- .navbar -->\n\n    <a class=\"get-started-btn scrollto scrollto\" href=\"http://localhost:4200/signup\">Rejoignez-nous</a>\n\n  </div>\n</header>\n\n\n<!--end navbar-->\n\n<!-- Section: Design Block -->\n  <!-- Background image -->\n\n  <div class=\" bg-image\" style= \"\n        height: 400px;\">\n        <img src=\"assets/img/5551.jpg\" >\n      </div>\n  <!-- Background image -->\n  <section class=\"text-center container my-5\">\n\n\n  <div class=\"card mx-6 mx-md-5 shadow-5-strong\" style=\"\n        margin-top: -100px;\n        background: hsla(0, 16%, 30%, 0.8);\n        backdrop-filter: blur(5px);\n        \">\n    <div class=\"card-body py-5 px-md-5\" >\n\n      <div class=\"row d-flex justify-content-center\" >\n        <div class=\"col-lg-8\">\n          <h2 class=\"fw-bold mb-5\">Inscription</h2>\n          <form (ngSubmit)=\"register(f)\" #f=ngForm  [formGroup]=\"myForm\" >\n            <!-- etablissement -->\n\n            <div class=\"row\">\n              <div class=\"col-md-6 mb-4\">\n                <div class=\"form-outline\">\n                  <input type=\"text\" name=\"userName\" formControlName=\"userName\"  class=\"form-control\"  placeholder=\"Etablissement\">\n                  <div  *ngIf=\"myForm.get('userName').invalid && (myForm.get('userName').dirty || myForm.get('userName').touched)\">\n\n\n                    <div  style=\"color: red;\"*ngIf=\"myForm.get('userName').errors.required\">Entrez votre établissement!</div>\n                  </div>\n                </div>\n              </div>\n              <!--gouvernorat-->\n              <div class=\"col-md-6 mb-4\">\n                <div class=\"form-outline\">\n\n                  <select class=\"form-select gov-field\" name=\"gov\"  formControlName=\"gov\"  class=\"form-control \"     [(ngModel)]=\"selectedItem\"  >\n                    <option value=\"\" selected hidden> Gouvernorat </option>\n                    <option *ngFor=\"let item of list\" [value]=\"item\">{{ item }}</option>\n\n                  </select>\n                  <div  *ngIf=\"myForm.get('gov').invalid && (myForm.get('gov').dirty || myForm.get('gov').touched)\">\n                    <div  style=\"color: red;\"*ngIf=\"myForm.get('gov').errors.required\">Entrez votre gouvernorat!</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n                <!-- Nom -->\n                <div class=\"row\">\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline\">\n                      <input type=\"text\" formControlName=\"lastName\"  class=\"form-control\"  placeholder=\"Nom\">\n                      <div  *ngIf=\"myForm.get('lastName').invalid && (myForm.get('lastName').dirty || myForm.get('lastName').touched)\">\n                        <div  style=\"color: red;\"*ngIf=\"myForm.get('lastName').errors.required\">Entrez votre Nom!</div>\n                      </div>\n                    </div>\n                    <!--prénom-->\n                    </div>\n                  <div class=\"col-md-6 mb-4\">\n                    <div class=\"form-outline\">\n                      <input type=\"text\" formControlName=\"firstName\"  class=\"form-control\"  placeholder=\"Prénom\">\n                      <div  *ngIf=\"myForm.get('firstName').invalid && (myForm.get('firstName').dirty || myForm.get('firstName').touched)\">\n                        <div  style=\"color: red;\"*ngIf=\"myForm.get('firstName').errors.required\">Entrez votre Nom!</div>\n                      </div>\n                  </div>\n                </div>\n                </div>\n\n            <!-- Email  -->\n            <div class=\"form-outline mb-4\">\n\n              <input type=\"email\" formControlName=\"email\" name=\"email\"  class=\"form-control\"  placeholder=\"Email\">\n              <div  *ngIf=\"myForm.get('email').invalid && (myForm.get('email').dirty || myForm.get('email').touched)\">\n                <div  style=\"color: red;\"*ngIf=\"myForm.get('email').errors.required\">Entrez votre email!</div>\n                <div style=\"color: red;\" *ngIf=\"myForm.get('email').errors.email\">Format invalide.</div>\n              </div>\n              <br>\n              <!--mot de passe-->\n          <!--      <div class=\"form-outline mb-4\">\n              <input type=\"password\" name=\"password\"  formControlName=\"password\" class=\"form-control\" placeholder=\"Mot de passe\" >\n\n              <div *ngIf=\"myForm.controls.password.errors && (myForm.controls.password.dirty || myForm.controls.password.touched)\">\n                <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.required\">Entrez votre mot de passe</div>\n                 <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.minlength\">  </div>\n                <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.pattern\"> invalide(utiliser des majuscules)</div>\n              </div>\n             </div>\n             <br>  -->\n             <div class=\"form-outline mb-4\">\n              <input type=\"password\" name=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Mot de passe\" >\n              <div *ngIf=\"myForm.controls.password.errors && (myForm.controls.password.dirty || myForm.controls.password.touched)\">\n              <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.required\">Entrez votre mot de passe</div>\n              <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.minlength\">Le mot de passe doit contenir au moins 8 caractères</div>\n            </div>\n              <br>\n              <input type=\"password\" name=\"passwordVerification\" formControlName=\"passwordVerification\" class=\"form-control\" placeholder=\"Confirmer le mot de passe\">\n              <div *ngIf=\"myForm.controls.passwordVerification.errors && (myForm.controls.passwordVerification.dirty || myForm.controls.passwordVerification.touched)\">\n                <div style=\"color: red;\" *ngIf=\"myForm.controls.passwordVerification.value !== myForm.controls.password.value\">Les mots de passe ne correspondent pas</div>\n              </div>\n            </div>\n            </div>\n\n\n\n\n\n            <div style=\"color:red\"\n            *ngIf=\"msg\"><i class=\"bi bi-exclamation-circle\"></i>\n             {{msg}}</div>\n\n\n            <!-- Submit button -->\n            <button [disabled]=!f.valid  type=\"submit\" class= \" button-85 btn btn-btn btn-outline-warning  mb-4\">\n              S'inscrire\n            </button>\n\n            <!-- Register buttons -->\n            <div class=\"text-center\" >\n              <p>vous avez déja un compte??</p><a href=\"http://localhost:4200/login\" style=\" color: #aaa5a5 ;\"> connecter </a>\n\n\n\n\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- Section: Design Block -->\n\n \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}