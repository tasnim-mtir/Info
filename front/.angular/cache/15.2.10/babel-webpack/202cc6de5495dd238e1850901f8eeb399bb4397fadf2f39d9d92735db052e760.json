{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(userService, router, formBuilder) {\n    this.userService = userService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  myCustomValidator(control) {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : {\n      'invalidEmail': true\n    };\n  }\n  ngSubmit() {}\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      email: ['', [Validators.required, Validators.email, this.myCustomValidator]]\n      // other form fields...\n    });\n  }\n\n  login(f) {\n    let data = f.value;\n    this.userService.login(data).subscribe({\n      next: response => {\n        this.userService.userLogIn(response.token);\n        this.router.navigate(['/']);\n        console.log(response);\n      },\n      error: err => {}\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAGjD,SAAmCC,UAAU,QAAQ,gBAAgB;AAO9D,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YAAoBC,WAAwB,EACjCC,MAAc,EACbC,WAAwB;IAFhB,gBAAW,GAAXF,WAAW;IACpB,WAAM,GAANC,MAAM;IACL,gBAAW,GAAXC,WAAW;EAChB;EACHC,iBAAiB,CAACC,OAAoB;IACpC,MAAMC,YAAY,GAAG,kDAAkD;IAEvE;IACA,MAAMC,OAAO,GAAGD,YAAY,CAACE,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;IAEhD;IACA,OAAOF,OAAO,GAAG,IAAI,GAAG;MAAE,cAAc,EAAE;IAAI,CAAE;EAClD;EAEOG,QAAQ,IAAK;EAExBC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC;MAEnCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,EAAElB,UAAU,CAACmB,OAAO,CAAC,iDAAiD,CAAC,CAAC,CAAC;MAErIC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACoB,KAAK,EAAE,IAAI,CAACd,iBAAiB,CAAC;MAC3E;KACD,CAAC;EAAG;;EACLe,KAAK,CAACC,CAAM;IACV,IAAIC,IAAI,GAAGD,CAAC,CAACX,KAAK;IAClB,IAAI,CAACR,WAAW,CAACkB,KAAK,CAACE,IAAI,CAAC,CAACC,SAAS,CAAC;MACrCC,IAAI,EAAGC,QAAa,IAAI;QACtB,IAAI,CAACvB,WAAW,CAACwB,SAAS,CAACD,QAAQ,CAACE,KAAK,CAAC;QAC1C,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3BC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACvB,CAAC;MACDM,KAAK,EAAEC,GAAG,IAAG,CAET;KACD,CAAC;EACJ;CAEH;AA7CQhC,cAAc,eAL1BF,SAAS,CAAC;EACTmC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWnC,cAAc,CA6CtB;SA7CQA,cAAc","names":["Component","Validators","LoginComponent","constructor","userService","router","formBuilder","myCustomValidator","control","EMAIL_REGEXP","isValid","test","value","ngSubmit","ngOnInit","myForm","group","password","required","minLength","pattern","email","login","f","data","subscribe","next","response","userLogIn","token","navigate","console","log","error","err","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\login\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  implements  OnInit {\n \n  myForm: any;\n  msg: any;\n  socket: any;\n\n\n  constructor(private userService: UserService,\n     private router: Router,\n      private formBuilder: FormBuilder,\n      ) {}\n      myCustomValidator(control: FormControl): { [key: string]: boolean } | null {\n        const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    \n        // Check if the email is valid using the regular expression\n        const isValid = EMAIL_REGEXP.test(control.value);\n    \n        // Return an object with the error code and message if the email is invalid\n        return isValid ? null : { 'invalidEmail': true };\n      }\n    \n      public ngSubmit() { }\n    \n  ngOnInit(): void {\n    this.myForm = this.formBuilder.group({\n\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n\n      email: ['', [Validators.required, Validators.email, this.myCustomValidator]],\n      // other form fields...\n    });  }\n    login(f: any) {\n      let data = f.value; \n      this.userService.login(data).subscribe({\n        next: (response: any) => {\n          this.userService.userLogIn(response.token)\n          this.router.navigate(['/'])\n          console.log(response)\n        },\n        error: err => {\n          \n            }\n          });\n        }\n    \n    }  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}