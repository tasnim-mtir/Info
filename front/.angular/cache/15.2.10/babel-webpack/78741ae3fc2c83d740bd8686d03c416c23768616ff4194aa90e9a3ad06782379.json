{"ast":null,"code":"import { Dot } from './Dot';\nimport { Box } from './Box';\nimport { Line } from './Line';\nimport { T } from './T';\nimport { Z } from './Z';\nimport { S } from './S';\nimport { L } from './L';\nimport { Lr } from './Lr';\nexport class PiecesFactory {\n  constructor(_gridSize) {\n    this._gridSize = _gridSize;\n    this._available = [];\n    // @ts-ignore\n    this._available.push(Dot);\n    // @ts-ignore\n    this._available.push(Box);\n    // @ts-ignore\n    this._available.push(Line);\n    // @ts-ignore\n    this._available.push(T);\n    // @ts-ignore\n    this._available.push(Z);\n    // @ts-ignore\n    this._available.push(S);\n    // @ts-ignore\n    this._available.push(L);\n    // @ts-ignore\n    this._available.push(Lr);\n  }\n  getRandomPiecePiece(x, y) {\n    const idx = Math.floor(Math.random() * this._available.length);\n    // @ts-ignore\n    return new this._available[idx](x, y, this._gridSize);\n    // return new this._available[2](x, y, this._gridSize);\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAQA,GAAG,QAAO,OAAO;AACzB,SAAQC,GAAG,QAAO,OAAO;AACzB,SAAQC,IAAI,QAAO,QAAQ;AAC3B,SAAQC,CAAC,QAAO,KAAK;AACrB,SAAQC,CAAC,QAAO,KAAK;AACrB,SAAQC,CAAC,QAAO,KAAK;AACrB,SAAQC,CAAC,QAAO,KAAK;AACrB,SAAQC,EAAE,QAAO,MAAM;AAIvB,OAAM,MAAOC,aAAa;EAGtBC,YAAoBC,SAAmB;IAAnB,cAAS,GAATA,SAAS;IAFrB,eAAU,GAAiB,EAAE;IAGjC;IACA,IAAI,CAACC,UAAU,CAACC,IAAI,CAACZ,GAAG,CAAC;IACzB;IACA,IAAI,CAACW,UAAU,CAACC,IAAI,CAACX,GAAG,CAAC;IACzB;IACA,IAAI,CAACU,UAAU,CAACC,IAAI,CAACV,IAAI,CAAC;IAC1B;IACA,IAAI,CAACS,UAAU,CAACC,IAAI,CAACT,CAAC,CAAC;IACvB;IACA,IAAI,CAACQ,UAAU,CAACC,IAAI,CAACR,CAAC,CAAC;IACvB;IACA,IAAI,CAACO,UAAU,CAACC,IAAI,CAACP,CAAC,CAAC;IACvB;IACA,IAAI,CAACM,UAAU,CAACC,IAAI,CAACN,CAAC,CAAC;IACvB;IACA,IAAI,CAACK,UAAU,CAACC,IAAI,CAACL,EAAE,CAAC;EAC5B;EAEOM,mBAAmB,CAACC,CAAS,EAAEC,CAAS;IAC3C,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAI,IAAI,CAACR,UAAU,CAACS,MAAO,CAAC;IAEhE;IACA,OAAO,IAAI,IAAI,CAACT,UAAU,CAACK,GAAG,CAAC,CAACF,CAAC,EAAEC,CAAC,EAAE,IAAI,CAACL,SAAS,CAAC;IACrD;EACJ","names":["Dot","Box","Line","T","Z","S","L","Lr","PiecesFactory","constructor","_gridSize","_available","push","getRandomPiecePiece","x","y","idx","Math","floor","random","length"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\ngx-tetris\\src\\lib\\classes\\PiecesFactory.ts"],"sourcesContent":["import {Dot} from './Dot';\r\nimport {Box} from './Box';\r\nimport {Line} from './Line';\r\nimport {T} from './T';\r\nimport {Z} from './Z';\r\nimport {S} from './S';\r\nimport {L} from './L';\r\nimport {Lr} from './Lr';\r\nimport {Piece} from './Piece';\r\nimport {GridSize} from '../definitions';\r\n\r\nexport class PiecesFactory {\r\n    private _available: Array<Piece> = [];\r\n\r\n    constructor(private _gridSize: GridSize) {\r\n        // @ts-ignore\r\n        this._available.push(Dot);\r\n        // @ts-ignore\r\n        this._available.push(Box);\r\n        // @ts-ignore\r\n        this._available.push(Line);\r\n        // @ts-ignore\r\n        this._available.push(T);\r\n        // @ts-ignore\r\n        this._available.push(Z);\r\n        // @ts-ignore\r\n        this._available.push(S);\r\n        // @ts-ignore\r\n        this._available.push(L);\r\n        // @ts-ignore\r\n        this._available.push(Lr);\r\n    }\r\n\r\n    public getRandomPiecePiece(x: number, y: number) {\r\n        const idx = Math.floor(Math.random() * (this._available.length));\r\n\r\n        // @ts-ignore\r\n        return new this._available[idx](x, y, this._gridSize);\r\n        // return new this._available[2](x, y, this._gridSize);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}