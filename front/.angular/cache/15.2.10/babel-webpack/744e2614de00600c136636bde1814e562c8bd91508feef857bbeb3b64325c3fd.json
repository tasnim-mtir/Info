{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-tetris/src/lib/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class SingupComponent {\n  constructor(Service, router, formBuilder) {\n    this.Service = Service;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  myCustomValidator(control) {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : {\n      'invalidEmail': true\n    };\n  }\n  register(f) {\n    let data = f.value;\n    data.Etat = \"Non vérifié\";\n    this.Service.register(data).subscribe(data => {\n      if (data) {\n        this.router.navigate(['/login']).then(() => {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        });\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      gov: ['', [Validators.required]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      passwordVerification: ['', Validators.required]\n    }, {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n      // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey, confirmPasswordKey) {\n    return group => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({\n          emptyPasswords: true\n        });\n      }\n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({\n          mismatchedPasswords: true\n        });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n  static #_ = this.ɵfac = function SingupComponent_Factory(t) {\n    return new (t || SingupComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingupComponent,\n    selectors: [[\"app-singup\"]],\n    decls: 47,\n    vars: 1,\n    consts: [[1, \"\", 2, \"background-color\", \"#eee\"], [1, \"container\", \"h-50\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-50\"], [1, \"col-lg-12\", \"col-xl-11\"], [1, \"card\", \"text-black\", 2, \"border-radius\", \"2px\"], [1, \"card-body\", \"p-md-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-10\", \"col-lg-6\", \"col-xl-5\", \"order-2\", \"order-lg-1\"], [1, \"text-center\", \"h1\", \"fw-bold\", \"mb-5\", \"mx-1\", \"mx-md-4\", \"mt-4\"], [1, \"mx-1\", \"mx-md-4\", 3, \"formGroup\", \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\", \"mb-4\"], [1, \"fas\", \"fa-user\", \"fa-lg\", \"me-3\", \"fa-fw\"], [1, \"form-outline\", \"flex-fill\", \"mb-0\"], [\"type\", \"text\", \"id\", \"form3Example1c\", 1, \"form-control\"], [\"for\", \"form3Example1c\", 1, \"form-label\"], [1, \"fas\", \"fa-envelope\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"email\", \"id\", \"form3Example3c\", 1, \"form-control\"], [\"for\", \"form3Example3c\", 1, \"form-label\"], [1, \"fas\", \"fa-lock\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"password\", \"id\", \"form3Example4c\", 1, \"form-control\"], [\"for\", \"form3Example4c\", 1, \"form-label\"], [1, \"fas\", \"fa-key\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"password\", \"id\", \"form3Example4cd\", 1, \"form-control\"], [\"for\", \"form3Example4cd\", 1, \"form-label\"], [1, \"form-check\", \"d-flex\", \"justify-content-center\", \"mb-5\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form2Example3c\", 1, \"form-check-input\", \"me-2\"], [\"for\", \"form2Example3\", 1, \"form-check-label\"], [\"href\", \"#!\"], [1, \"d-flex\", \"justify-content-center\", \"mx-4\", \"mb-3\", \"mb-lg-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\"], [1, \"col-md-10\", \"col-lg-6\", \"col-xl-7\", \"d-flex\", \"align-items-center\", \"order-1\", \"order-lg-2\"], [\"src\", \"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\", \"alt\", \"Sample image\", 1, \"img-fluid\"]],\n    template: function SingupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"p\", 8);\n        i0.ɵɵtext(9, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function SingupComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(11);\n          return i0.ɵɵresetView(ctx.register(_r0));\n        });\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelement(13, \"i\", 12);\n        i0.ɵɵelementStart(14, \"div\", 13);\n        i0.ɵɵelement(15, \"input\", 14);\n        i0.ɵɵelementStart(16, \"label\", 15);\n        i0.ɵɵtext(17, \"Your Name\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 11);\n        i0.ɵɵelement(19, \"i\", 16);\n        i0.ɵɵelementStart(20, \"div\", 13);\n        i0.ɵɵelement(21, \"input\", 17);\n        i0.ɵɵelementStart(22, \"label\", 18);\n        i0.ɵɵtext(23, \"Your Email\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(24, \"div\", 11);\n        i0.ɵɵelement(25, \"i\", 19);\n        i0.ɵɵelementStart(26, \"div\", 13);\n        i0.ɵɵelement(27, \"input\", 20);\n        i0.ɵɵelementStart(28, \"label\", 21);\n        i0.ɵɵtext(29, \"Password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 11);\n        i0.ɵɵelement(31, \"i\", 22);\n        i0.ɵɵelementStart(32, \"div\", 13);\n        i0.ɵɵelement(33, \"input\", 23);\n        i0.ɵɵelementStart(34, \"label\", 24);\n        i0.ɵɵtext(35, \"Repeat your password\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(36, \"div\", 25);\n        i0.ɵɵelement(37, \"input\", 26);\n        i0.ɵɵelementStart(38, \"label\", 27);\n        i0.ɵɵtext(39, \" I agree all statements in \");\n        i0.ɵɵelementStart(40, \"a\", 28);\n        i0.ɵɵtext(41, \"Terms of service\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"div\", 29)(43, \"button\", 30);\n        i0.ɵɵtext(44, \"Register\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(45, \"div\", 31);\n        i0.ɵɵelement(46, \"img\", 32);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAA8CA,UAAU,QAAQ,gBAAgB;AAGhF,OAAOC,IAAI,MAAM,aAAa;;;;;AAO9B,OAAM,MAAOC,eAAe;EAK5BC,YAAqBC,OAAmB,EAASC,MAAa,EAAUC,WAAwB;IAA3E,YAAO,GAAPF,OAAO;IAAqB,WAAM,GAANC,MAAM;IAAiB,gBAAW,GAAXC,WAAW;EAAe;EAGlGC,iBAAiB,CAACC,OAAoB;IACpC,MAAMC,YAAY,GAAG,kDAAkD;IAEvE;IACA,MAAMC,OAAO,GAAGD,YAAY,CAACE,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;IAEhD;IACA,OAAOF,OAAO,GAAG,IAAI,GAAG;MAAE,cAAc,EAAE;IAAI,CAAE;EAAC;EAGjDG,QAAQ,CAACC,CAAK;IACZ,IAAIC,IAAI,GAACD,CAAC,CAACF,KAAK;IAChBG,IAAI,CAACC,IAAI,GAAC,aAAa;IACvB,IAAI,CAACZ,OAAO,CAACS,QAAQ,CAACE,IAAI,CAAC,CAACE,SAAS,CAACF,IAAI,IAAE;MAC1C,IAAGA,IAAI,EAAC;QACN,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;UACxClB,IAAI,CAACmB,IAAI,CAAC;YACRC,QAAQ,EAAE,SAAS;YACnBC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,yBAAyB;YAChCC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;WACR,CAAC;QACJ,CAAC,CAAC;OACH,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;;IAEtC,CAAC,EAAEC,GAAG,IAAG;MACPF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChB,IAAI,CAACC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAACD,GAAG;IAC1B,CAAC,CAAC;EACJ;EACAE,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAAC1B,WAAW,CAAC2B,KAAK,CAAC;MAEnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAClC,UAAU,CAACmC,QAAQ,EAAEnC,UAAU,CAACkC,KAAK,EAAC,IAAI,CAAC3B,iBAAiB,CAAC,CAAC;MAC3E6B,SAAS,EAAE,CAAC,EAAE,EAAEpC,UAAU,CAACmC,QAAQ,CAAC;MACpCE,QAAQ,EAAE,CAAC,EAAE,EAAErC,UAAU,CAACmC,QAAQ,CAAC;MACnCG,GAAG,EAAE,CAAC,EAAE,EAAE,CAACtC,UAAU,CAACmC,QAAQ,CAAC,CAAC;MAChCI,QAAQ,EAAE,CAAC,EAAE,EAAEvC,UAAU,CAACmC,QAAQ,CAAC;MACnCK,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACxC,UAAU,CAACmC,QAAQ,EAAEnC,UAAU,CAACyC,SAAS,CAAC,CAAC,CAAC,EAAEzC,UAAU,CAAC0C,OAAO,CAAC,iDAAiD,CAAC,CAAC,CAAC;MACrIC,oBAAoB,EAAE,CAAC,EAAE,EAAE3C,UAAU,CAACmC,QAAQ;KAAE,EAEhD;MACAS,SAAS,EAAE,IAAI,CAACC,iBAAiB,CAAC,UAAU,EAAE,sBAAsB;MAClE;KACH,CAAC;EACJ;;EAEAA,iBAAiB,CAACC,WAAmB,EAAEC,kBAA0B;IAC/D,OAAQd,KAAgB,IAAI;MAC1B,MAAMO,QAAQ,GAAGP,KAAK,CAACe,QAAQ,CAACF,WAAW,CAAC;MAC5C,MAAMG,eAAe,GAAGhB,KAAK,CAACe,QAAQ,CAACD,kBAAkB,CAAC;MAE1D;MACA,IAAI,CAACP,QAAQ,CAAC5B,KAAK,IAAI,CAACqC,eAAe,CAACrC,KAAK,EAAE;QAC7C,OAAOqC,eAAe,CAACC,SAAS,CAAC;UAAEC,cAAc,EAAE;QAAI,CAAE,CAAC;;MAG5D,IAAIX,QAAQ,CAAC5B,KAAK,KAAKqC,eAAe,CAACrC,KAAK,EAAE;QAC5C,OAAOqC,eAAe,CAACC,SAAS,CAAC;UAAEE,mBAAmB,EAAE;QAAI,CAAE,CAAC;OAChE,MAAM;QACL,OAAOH,eAAe,CAACC,SAAS,CAAC,IAAI,CAAC;;IAE1C,CAAC;EACH;EAAC;qBAzEUhD,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAmD;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QCX5BC,kCAAmD;QASwBA,uBAAO;QAAAA,iBAAI;QAEpEA,oCAAqF;QAA9EA;UAAAA;UAAA;UAAA,OAAYA,gCAAW;QAAA,EAAC;QAE7BA,gCAAqD;QACnDA,yBAA4C;QAC5CA,gCAAyC;QACvCA,6BAA8D;QAC9DA,kCAA+C;QAAAA,0BAAS;QAAAA,iBAAQ;QAIpEA,gCAAqD;QACnDA,yBAAgD;QAChDA,gCAAyC;QACvCA,6BAA+D;QAC/DA,kCAA+C;QAAAA,2BAAU;QAAAA,iBAAQ;QAIrEA,gCAAqD;QACnDA,yBAA4C;QAC5CA,gCAAyC;QACvCA,6BAAkE;QAClEA,kCAA+C;QAAAA,yBAAQ;QAAAA,iBAAQ;QAInEA,gCAAqD;QACnDA,yBAA2C;QAC3CA,gCAAyC;QACvCA,6BAAmE;QACnEA,kCAAgD;QAAAA,qCAAoB;QAAAA,iBAAQ;QAIhFA,gCAA2D;QACzDA,6BAAoF;QACpFA,kCAAoD;QAClDA,4CAA0B;QAAAA,8BAAa;QAAAA,iCAAgB;QAAAA,iBAAI;QAI/DA,gCAA6D;QACNA,yBAAQ;QAAAA,iBAAS;QAM5EA,gCAAsF;QAEpFA,2BACuC;QAEzCA,iBAAM;;;QArDuCA,gBAAoB;QAApBA,sCAAoB","names":["Validators","Swal","SingupComponent","constructor","Service","router","formBuilder","myCustomValidator","control","EMAIL_REGEXP","isValid","test","value","register","f","data","Etat","subscribe","navigate","then","fire","position","icon","title","showConfirmButton","timer","console","log","err","msg","error","ngOnInit","myForm","group","email","required","firstName","lastName","gov","userName","password","minLength","pattern","passwordVerification","validator","matchingPasswords","passwordKey","confirmPasswordKey","controls","confirmPassword","setErrors","emptyPasswords","mismatchedPasswords","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.ts","C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'ngx-tetris/src/lib/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-singup',\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.css']\n})\nexport class SingupComponent implements OnInit {\n  myForm: any;\n\n  msg:any\n  f: any;\nconstructor( private Service:UserService,private router:Router ,private formBuilder: FormBuilder){}\n  \n\nmyCustomValidator(control: FormControl): { [key: string]: boolean } | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if the email is valid using the regular expression\n  const isValid = EMAIL_REGEXP.test(control.value);\n\n  // Return an object with the error code and message if the email is invalid\n  return isValid ? null : { 'invalidEmail': true };}\n\n\n  register(f:any){\n    let data=f.value\n    data.Etat=\"Non vérifié\"\n    this.Service.register(data).subscribe(data=>{\n      if(data){\n        this.router.navigate(['/login']).then(()=>{\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          })\n        })\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit(): void { \n    this.myForm = this.formBuilder.group({\n\n      email: ['', [Validators.required, Validators.email,this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      gov: ['', [Validators.required]],\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],   \n      passwordVerification: ['', Validators.required]},\n       \n      {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n        // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup) => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n  \n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({ emptyPasswords: true });\n      }\n  \n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({ mismatchedPasswords: true });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n\n\n}\n\n\n\n\n\n\n","<section class=\"\" style=\"background-color: #eee; \">\n    <div class=\"container h-50\">\n      <div class=\"row d-flex justify-content-center align-items-center h-50\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 2px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n  \n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\n  \n                  <form  (ngSubmit)=\"register(f)\" #f=ngForm  [formGroup]=\"myForm\" class=\"mx-1 mx-md-4\">\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"text\" id=\"form3Example1c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\n                      </div>\n                    </div>\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"email\" id=\"form3Example3c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label>\n                      </div>\n                    </div>\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"password\" id=\"form3Example4c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label>\n                      </div>\n                    </div>\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-key fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"password\" id=\"form3Example4cd\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example4cd\">Repeat your password</label>\n                      </div>\n                    </div>\n  \n                    <div class=\"form-check d-flex justify-content-center mb-5\">\n                      <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" />\n                      <label class=\"form-check-label\" for=\"form2Example3\">\n                        I agree all statements in <a href=\"#!\">Terms of service</a>\n                      </label>\n                    </div>\n  \n                    <div class=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\n                      <button type=\"button\" class=\"btn btn-primary btn-lg\">Register</button>\n                    </div>\n  \n                  </form>\n  \n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n  \n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}