{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nlet InscriptionLayoutComponent = class InscriptionLayoutComponent {\n  constructor(Service, router) {\n    this.Service = Service;\n    this.router = router;\n    this.helper = new JwtHelperService();\n    this.data = {\n      firstName: \"\",\n      lastName: \"\"\n    };\n    const token = localStorage.getItem('token');\n    if (token && !this.helper.isTokenExpired(token)) {\n      const decodedToken = this.helper.decodeToken(token);\n      this.encrypted_id = decodedToken.userId;\n    }\n  }\n  ngOnInit() {\n    this.Service.getOneUser(this.encrypted_id).subscribe({\n      next: response => {\n        this.data = response.user;\n      },\n      error: err => {\n        console.log(err);\n      }\n    });\n  }\n  logout() {\n    this.Service.userLogout();\n    this.router.navigate(['/signup']);\n  }\n};\nInscriptionLayoutComponent = __decorate([Component({\n  selector: 'app-inscription-layout',\n  templateUrl: './inscription-layout.component.html',\n  styleUrls: ['./inscription-layout.component.css']\n})], InscriptionLayoutComponent);\nexport { InscriptionLayoutComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,gBAAgB,QAAQ,oBAAoB;AAQ9C,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAOrCC,YAAmBC,OAAmB,EAAUC,MAAc;IAA3C,YAAO,GAAPD,OAAO;IAAsB,WAAM,GAANC,MAAM;IANtD,WAAM,GAAG,IAAIJ,gBAAgB,EAAE;IAE/B,SAAI,GAAQ;MAAEK,SAAS,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAKzC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,IAAI,CAAC,IAAI,CAACG,MAAM,CAACC,cAAc,CAACJ,KAAK,CAAC,EAAE;MAC/C,MAAMK,YAAY,GAAG,IAAI,CAACF,MAAM,CAACG,WAAW,CAACN,KAAK,CAAC;MACnD,IAAI,CAACO,YAAY,GAAGF,YAAY,CAACG,MAAM;;EAE3C;EACAC,QAAQ;IACN,IAAI,CAACb,OAAO,CAACc,UAAU,CAAC,IAAI,CAACH,YAAY,CAAC,CAACI,SAAS,CAAC;MACnDC,IAAI,EAAGC,QAAa,IAAI;QACtB,IAAI,CAACC,IAAI,GAAGD,QAAQ,CAACE,IAAI;MAC3B,CAAC;MACDC,KAAK,EAAGC,GAAsB,IAAI;QAChCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;KACD,CAAC;EACJ;EACAG,MAAM;IACJ,IAAI,CAACxB,OAAO,CAACyB,UAAU,EAAE;IACzB,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;CACD;AA5BY5B,0BAA0B,eALtCF,SAAS,CAAC;EACT+B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACW/B,0BAA0B,CA4BtC;SA5BYA,0BAA0B","names":["Component","JwtHelperService","InscriptionLayoutComponent","constructor","Service","router","firstName","lastName","token","localStorage","getItem","helper","isTokenExpired","decodedToken","decodeToken","encrypted_id","userId","ngOnInit","getOneUser","subscribe","next","response","data","user","error","err","console","log","logout","userLogout","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\layout\\inscription-layout\\inscription-layout.component.ts"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { UserService } from 'src/app/views/user.service';\r\n\r\n@Component({\r\n  selector: 'app-inscription-layout',\r\n  templateUrl: './inscription-layout.component.html',\r\n  styleUrls: ['./inscription-layout.component.css']\r\n})\r\nexport class InscriptionLayoutComponent implements OnInit {\r\n  helper = new JwtHelperService()\r\n  encrypted_id: any\r\n  data: any = { firstName: \"\", lastName: \"\" }\r\n  firstName: any\r\n\r\n\r\n  constructor(public Service:UserService, private router: Router) {\r\n    const token = localStorage.getItem('token');\r\n    if (token && !this.helper.isTokenExpired(token)) {\r\n      const decodedToken = this.helper.decodeToken(token);\r\n      this.encrypted_id = decodedToken.userId;\r\n    }\r\n  }\r\n  ngOnInit(): void { \r\n    this.Service.getOneUser(this.encrypted_id).subscribe({\r\n      next: (response: any) => {\r\n        this.data = response.user\r\n      },\r\n      error: (err: HttpErrorResponse) => {\r\n        console.log(err)\r\n      }\r\n    })\r\n  } \r\n  logout() {\r\n    this.Service.userLogout()\r\n    this.router.navigate(['/signup'])\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}