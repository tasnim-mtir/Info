{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-tetris/src/lib/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction SingupComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Entrez votre Nom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_18_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.myForm.get(\"firstName\").errors.required);\n  }\n}\nfunction SingupComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Entrez votre Nom !\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_25_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.myForm.get(\"firstName\").errors.required);\n  }\n}\nfunction SingupComponent_div_32_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Entrez votre email!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_32_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Format invalide.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_32_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, SingupComponent_div_32_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.myForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.myForm.get(\"email\").errors.email);\n  }\n}\nfunction SingupComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Entrez votre mot de passe\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Le mot de passe doit contenir au moins 8 caract\\u00E8res\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_39_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, SingupComponent_div_39_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.myForm.controls.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.myForm.controls.password.errors.minlength);\n  }\n}\nfunction SingupComponent_div_46_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \"Les mots de passe ne correspondent pas\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SingupComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SingupComponent_div_46_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.myForm.controls.passwordVerification.value !== ctx_r5.myForm.controls.password.value);\n  }\n}\nfunction SingupComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelement(1, \"i\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.msg, \"\");\n  }\n}\nexport class SingupComponent {\n  constructor(Service, router, formBuilder) {\n    this.Service = Service;\n    this.router = router;\n    this.formBuilder = formBuilder;\n  }\n  myCustomValidator(control) {\n    const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    // Check if the email is valid using the regular expression\n    const isValid = EMAIL_REGEXP.test(control.value);\n    // Return an object with the error code and message if the email is invalid\n    return isValid ? null : {\n      'invalidEmail': true\n    };\n  }\n  register(f) {\n    let data = f.value;\n    data.Etat = \"Non vérifié\";\n    this.Service.register(data).subscribe(data => {\n      if (data) {\n        this.router.navigate(['/login']).then(() => {\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          });\n        });\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit() {\n    this.myForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email, this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],\n      passwordVerification: ['', Validators.required]\n    }, {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n      // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey, confirmPasswordKey) {\n    return group => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({\n          emptyPasswords: true\n        });\n      }\n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({\n          mismatchedPasswords: true\n        });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n  static #_ = this.ɵfac = function SingupComponent_Factory(t) {\n    return new (t || SingupComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SingupComponent,\n    selectors: [[\"app-singup\"]],\n    decls: 57,\n    vars: 7,\n    consts: [[1, \"\", 2, \"background-color\", \"#eee\"], [1, \"container\", \"h-50\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-50\"], [1, \"col-lg-12\", \"col-xl-11\"], [1, \"card\", \"text-black\", 2, \"border-radius\", \"2px\"], [1, \"card-body\", \"p-md-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-10\", \"col-lg-6\", \"col-xl-5\", \"order-2\", \"order-lg-1\"], [1, \"text-center\", \"h1\", \"fw-bold\", \"mb-5\", \"mx-1\", \"mx-md-4\", \"mt-4\"], [1, \"mx-1\", \"mx-md-4\", 3, \"formGroup\", \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"d-flex\", \"flex-row\", \"align-items-center\", \"mb-4\"], [1, \"fas\", \"fa-user\", \"fa-lg\", \"me-3\", \"fa-fw\"], [1, \"form-outline\", \"flex-fill\", \"mb-0\"], [\"type\", \"text\", \"name\", \"firstName\", \"formControlName\", \"firstName\", \"id\", \"form3Example1c\", 1, \"form-control\"], [\"for\", \"form3Example1c\", 1, \"form-label\"], [4, \"ngIf\"], [\"type\", \"text\", \"name\", \"lastName\", \"formControlName\", \"lastName\", \"id\", \"form3Example1c\", 1, \"form-control\"], [1, \"fas\", \"fa-envelope\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"email\", \"formControlName\", \"email\", \"name\", \"email\", \"id\", \"form3Example3c\", 1, \"form-control\"], [\"for\", \"form3Example3c\", 1, \"form-label\"], [1, \"fas\", \"fa-lock\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"password\", \"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"id\", \"form3Example4c\", 1, \"form-control\"], [\"for\", \"form3Example4c\", 1, \"form-label\"], [1, \"fas\", \"fa-key\", \"fa-lg\", \"me-3\", \"fa-fw\"], [\"type\", \"password\", \"name\", \"passwordVerification\", \"formControlName\", \"passwordVerification\", \"id\", \"form3Example4cd\", 1, \"form-control\"], [\"for\", \"form3Example4cd\", 1, \"form-label\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"[\", \"\", \"type\", \"submit\", 1, \"button-85\", \"btn\", \"btn-btn\", \"btn-outline-warning\", \"mb-4\"], [1, \"text-center\"], [\"href\", \"http://localhost:4200/login\", 2, \"color\", \"#aaa5a5\"], [1, \"col-md-10\", \"col-lg-6\", \"col-xl-7\", \"d-flex\", \"align-items-center\", \"order-1\", \"order-lg-2\"], [\"src\", \"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\", \"alt\", \"Sample image\", 1, \"img-fluid\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [2, \"color\", \"red\"], [1, \"bi\", \"bi-exclamation-circle\"]],\n    template: function SingupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"p\", 8);\n        i0.ɵɵtext(9, \"Sign up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 9, 10);\n        i0.ɵɵlistener(\"ngSubmit\", function SingupComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r0 = i0.ɵɵreference(11);\n          return i0.ɵɵresetView(ctx.register(_r0));\n        });\n        i0.ɵɵelementStart(12, \"div\", 11);\n        i0.ɵɵelement(13, \"i\", 12);\n        i0.ɵɵelementStart(14, \"div\", 13);\n        i0.ɵɵelement(15, \"input\", 14);\n        i0.ɵɵelementStart(16, \"label\", 15);\n        i0.ɵɵtext(17, \"Your Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(18, SingupComponent_div_18_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 11);\n        i0.ɵɵelement(20, \"i\", 12);\n        i0.ɵɵelementStart(21, \"div\", 13);\n        i0.ɵɵelement(22, \"input\", 17);\n        i0.ɵɵelementStart(23, \"label\", 15);\n        i0.ɵɵtext(24, \"Your Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, SingupComponent_div_25_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 11);\n        i0.ɵɵelement(27, \"i\", 18);\n        i0.ɵɵelementStart(28, \"div\", 13);\n        i0.ɵɵelement(29, \"input\", 19);\n        i0.ɵɵelementStart(30, \"label\", 20);\n        i0.ɵɵtext(31, \"Your Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, SingupComponent_div_32_Template, 3, 2, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 11);\n        i0.ɵɵelement(34, \"i\", 21);\n        i0.ɵɵelementStart(35, \"div\", 13);\n        i0.ɵɵelement(36, \"input\", 22);\n        i0.ɵɵelementStart(37, \"label\", 23);\n        i0.ɵɵtext(38, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(39, SingupComponent_div_39_Template, 3, 2, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"div\", 11);\n        i0.ɵɵelement(41, \"i\", 24);\n        i0.ɵɵelementStart(42, \"div\", 13);\n        i0.ɵɵelement(43, \"input\", 25);\n        i0.ɵɵelementStart(44, \"label\", 26);\n        i0.ɵɵtext(45, \"Repeat your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, SingupComponent_div_46_Template, 2, 1, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(47, SingupComponent_div_47_Template, 3, 1, \"div\", 27);\n        i0.ɵɵelementStart(48, \"button\", 28);\n        i0.ɵɵtext(49, \" S'inscrire \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 29)(51, \"p\");\n        i0.ɵɵtext(52, \"vous avez d\\u00E9ja un compte??\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"a\", 30);\n        i0.ɵɵtext(54, \" connecter \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(55, \"div\", 31);\n        i0.ɵɵelement(56, \"img\", 32);\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"firstName\").invalid && (ctx.myForm.get(\"firstName\").dirty || ctx.myForm.get(\"firstName\").touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"lastName\").invalid && (ctx.myForm.get(\"lastName\").dirty || ctx.myForm.get(\"lastName\").touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.get(\"email\").invalid && (ctx.myForm.get(\"email\").dirty || ctx.myForm.get(\"email\").touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls.password.errors && (ctx.myForm.controls.password.dirty || ctx.myForm.controls.password.touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.myForm.controls.passwordVerification.errors && (ctx.myForm.controls.passwordVerification.dirty || ctx.myForm.controls.passwordVerification.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.msg);\n      }\n    },\n    dependencies: [i4.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","Swal","i0","SingupComponent","constructor","Service","router","formBuilder","myCustomValidator","control","EMAIL_REGEXP","isValid","test","value","register","f","data","Etat","subscribe","navigate","then","fire","position","icon","title","showConfirmButton","timer","console","log","err","msg","error","ngOnInit","myForm","group","email","required","firstName","lastName","password","minLength","pattern","passwordVerification","validator","matchingPasswords","passwordKey","confirmPasswordKey","controls","confirmPassword","setErrors","emptyPasswords","mismatchedPasswords","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.ts","C:\\Users\\Eyakr\\Info\\front\\src\\app\\views\\singup\\singup\\singup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from 'ngx-tetris/src/lib/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-singup',\n  templateUrl: './singup.component.html',\n  styleUrls: ['./singup.component.css']\n})\nexport class SingupComponent implements OnInit {\n  myForm: any;\n\n  msg:any\n  f: any;\nconstructor( private Service:UserService,private router:Router ,private formBuilder: FormBuilder){}\n  \n\nmyCustomValidator(control: FormControl): { [key: string]: boolean } | null {\n  const EMAIL_REGEXP = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n  // Check if the email is valid using the regular expression\n  const isValid = EMAIL_REGEXP.test(control.value);\n\n  // Return an object with the error code and message if the email is invalid\n  return isValid ? null : { 'invalidEmail': true };}\n\n\n  register(f:any){\n    let data=f.value\n    data.Etat=\"Non vérifié\"\n    this.Service.register(data).subscribe(data=>{\n      if(data){\n        this.router.navigate(['/login']).then(()=>{\n          Swal.fire({\n            position: 'top-end',\n            icon: 'success',\n            title: 'compte créé avec succès',\n            showConfirmButton: false,\n            timer: 1500\n          })\n        })\n      } else {\n        console.log('Registration failed');\n      }\n    }, err => {\n      console.log(err);\n      this.msg = err.error.msg;\n    });\n  }\n  ngOnInit(): void { \n    this.myForm = this.formBuilder.group({\n\n      email: ['', [Validators.required, Validators.email,this.myCustomValidator]],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]],   \n      passwordVerification: ['', Validators.required]},\n       \n      {\n      validator: this.matchingPasswords('password', 'passwordVerification')\n        // other form fields...\n    });\n  }\n\n  matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\n    return (group: FormGroup) => {\n      const password = group.controls[passwordKey];\n      const confirmPassword = group.controls[confirmPasswordKey];\n  \n      // If both fields are empty, they are not considered matching\n      if (!password.value && !confirmPassword.value) {\n        return confirmPassword.setErrors({ emptyPasswords: true });\n      }\n  \n      if (password.value !== confirmPassword.value) {\n        return confirmPassword.setErrors({ mismatchedPasswords: true });\n      } else {\n        return confirmPassword.setErrors(null);\n      }\n    };\n  }\n\n\n}\n\n\n\n\n\n\n","<section class=\"\" style=\"background-color: #eee; \">\n    <div class=\"container h-50\">\n      <div class=\"row d-flex justify-content-center align-items-center h-50\">\n        <div class=\"col-lg-12 col-xl-11\">\n          <div class=\"card text-black\" style=\"border-radius: 2px;\">\n            <div class=\"card-body p-md-5\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\n  \n                  <p class=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\n  \n                  <form  (ngSubmit)=\"register(f)\" #f=ngForm  [formGroup]=\"myForm\" class=\"mx-1 mx-md-4\">\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"text\" name=\"firstName\" formControlName=\"firstName\" id=\"form3Example1c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\n                        <div  *ngIf=\"myForm.get('firstName').invalid && (myForm.get('firstName').dirty || myForm.get('firstName').touched)\">\n                          <div  style=\"color: red;\"*ngIf=\"myForm.get('firstName').errors.required\">Entrez votre Nom !</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-user fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"text\" name=\"lastName\" formControlName=\"lastName\" id=\"form3Example1c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example1c\">Your Name</label>\n                        <div  *ngIf=\"myForm.get('lastName').invalid && (myForm.get('lastName').dirty || myForm.get('lastName').touched)\">\n                          <div  style=\"color: red;\"*ngIf=\"myForm.get('firstName').errors.required\">Entrez votre Nom !</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input  type=\"email\" formControlName=\"email\" name=\"email\"  class=\"form-control\"  id=\"form3Example3c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example3c\">Your Email</label> \n                        <div  *ngIf=\"myForm.get('email').invalid && (myForm.get('email').dirty || myForm.get('email').touched)\">\n                          <div  style=\"color: red;\"*ngIf=\"myForm.get('email').errors.required\">Entrez votre email!</div>\n                          <div style=\"color: red;\" *ngIf=\"myForm.get('email').errors.email\">Format invalide.</div>\n                        </div>\n                      </div>\n                    </div>\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"password\" type=\"password\" name=\"password\" formControlName=\"password\" class=\"form-control\" id=\"form3Example4c\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example4c\">Password</label> \n                        <div *ngIf=\"myForm.controls.password.errors && (myForm.controls.password.dirty || myForm.controls.password.touched)\">\n                          <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.required\">Entrez votre mot de passe</div>\n                          <div style=\"color: red;\" *ngIf=\"myForm.controls.password.errors.minlength\">Le mot de passe doit contenir au moins 8 caractères</div>\n                        </div>\n                      </div>\n                    </div>\n  \n                    <div class=\"d-flex flex-row align-items-center mb-4\">\n                      <i class=\"fas fa-key fa-lg me-3 fa-fw\"></i>\n                      <div class=\"form-outline flex-fill mb-0\">\n                        <input type=\"password\" name=\"passwordVerification\" formControlName=\"passwordVerification\" class=\"form-control\" id=\"form3Example4cd\" class=\"form-control\" />\n                        <label class=\"form-label\" for=\"form3Example4cd\">Repeat your password</label> \n                        <div *ngIf=\"myForm.controls.passwordVerification.errors && (myForm.controls.passwordVerification.dirty || myForm.controls.passwordVerification.touched)\">\n                          <div style=\"color: red;\" *ngIf=\"myForm.controls.passwordVerification.value !== myForm.controls.password.value\">Les mots de passe ne correspondent pas</div>\n                        </div>\n                      </div>\n                    </div>\n  \n                    <div style=\"color:red\"\n            *ngIf=\"msg\"><i class=\"bi bi-exclamation-circle\"></i>\n             {{msg}}</div>\n\n\n            <!-- Submit button -->\n            <button [  type=\"submit\" class= \" button-85 btn btn-btn btn-outline-warning  mb-4\">\n              S'inscrire\n            </button>\n\n            <!-- Register buttons -->\n            <div class=\"text-center\" >\n              <p>vous avez déja un compte??</p><a href=\"http://localhost:4200/login\" style=\" color: #aaa5a5 ;\"> connecter </a>\n\n\n\n\n            </div>\n                   \n                  </form>\n  \n                </div>\n                <div class=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\n  \n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\n                    class=\"img-fluid\" alt=\"Sample image\">\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}